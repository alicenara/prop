package propLlibreria.Interficie;
import java.awt.Dimension;
import java.util.concurrent.ExecutionException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.SwingWorker;

public class VistaMentreOrdena extends javax.swing.JPanel {

    public VistaMentreOrdena() {
        initComponents();
        bExport.setVisible(false);
    }
     
    public void ordenar(boolean tip){
        //tipus=1 = heuristico
        //tipus=0 = exacto
        bExport.setVisible(false);
        bSortir.setText("Cancel·lar");
        labProgressGif.setVisible(true);
        labKeepCalm.setText("Ordenant. Esperi si us plau.");
        final boolean tipus=tip;
        SwingWorker<Boolean, Void> ordena;
        ordena = new SwingWorker<Boolean, Void>() {
            @Override
            protected Boolean doInBackground() throws Exception {
                try{
                    CtrlInterficie.reordenacioBiblioteca(tipus);
                }catch (Exception e){
                    System.out.println(e);
                    JFrame frame = new JFrame();
                    JOptionPane.showMessageDialog(frame,
                    "No hi ha prous llocs a les estanteries per la quantitat de llibres que hi ha.",
                    "Pocs llocs a les estanteries",
                    JOptionPane.WARNING_MESSAGE);
                }
                return true;
            }
            
            @Override
            protected void done() {
                boolean status;
                try {
                    status = get();                    
                    if(status){
                        ordenacioAcabada();
                    } 
                } catch (InterruptedException e) {
                    // This is thrown if the thread's interrupted.
                } catch (ExecutionException e) {
                    // This is thrown if we throw an exception from doInBackground. 
                }
            }
        };
        
        ordena.execute();
    }
    
    private void ordenacioAcabada(){
        bExport.setVisible(true);
        bSortir.setText("Tornar al menú");
        labProgressGif.setVisible(false);
        labKeepCalm.setText("Ordenació acabada.");
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labKeepCalm = new javax.swing.JLabel();
        bSortir = new javax.swing.JButton();
        bExport = new javax.swing.JButton();
        labProgressGif = new javax.swing.JLabel();

        labKeepCalm.setFont(new java.awt.Font("Arial Unicode MS", 0, 13)); // NOI18N
        labKeepCalm.setText("Ordenant. Esperi si us plau.");

        bSortir.setFont(new java.awt.Font("Arial Unicode MS", 0, 13)); // NOI18N
        bSortir.setText("Cancel·lar");
        bSortir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSortirActionPerformed(evt);
            }
        });

        bExport.setFont(new java.awt.Font("Arial Unicode MS", 0, 13)); // NOI18N
        bExport.setText("Veure ordenació");
        bExport.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bExportActionPerformed(evt);
            }
        });

        labProgressGif.setIcon(new javax.swing.ImageIcon(getClass().getResource("/propLlibreria/Interficie/icons/spinner-blue.gif"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(labKeepCalm))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(bExport, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(bSortir, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(183, Short.MAX_VALUE)
                .addComponent(labProgressGif)
                .addGap(181, 181, 181))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(labKeepCalm)
                .addGap(32, 32, 32)
                .addComponent(labProgressGif)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bSortir, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bExport, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bSortirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSortirActionPerformed
        if(bSortir.getText().equals("Cancel·lar")){
            JFrame dialog = new JFrame();
            int n = JOptionPane.showConfirmDialog( dialog, "Estas segur que ho vols cancel·lar?\n"+"Això tancarà el programa.", "Cancelar ordenació", JOptionPane.YES_NO_OPTION);
            if(n==0){
                VistaPrincipal v = (VistaPrincipal)SwingUtilities.getWindowAncestor(this);
                v.dispose();
                System.exit(0);
            }
        }else{
            VistaPrincipal v = (VistaPrincipal)SwingUtilities.getWindowAncestor(this);
            v.ferVisiblePrincipal();
        }       
    }//GEN-LAST:event_bSortirActionPerformed

    private void bExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bExportActionPerformed
        VistaOrdenat llibresOrdenats = new VistaOrdenat();
        JFrame frameLlibresOrdenats = new JFrame();
        frameLlibresOrdenats.setSize(new Dimension(600,400));
        frameLlibresOrdenats.setResizable(false);
        frameLlibresOrdenats.add(llibresOrdenats);
        frameLlibresOrdenats.setVisible(true);
    }//GEN-LAST:event_bExportActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bExport;
    private javax.swing.JButton bSortir;
    private javax.swing.JLabel labKeepCalm;
    private javax.swing.JLabel labProgressGif;
    // End of variables declaration//GEN-END:variables
}
