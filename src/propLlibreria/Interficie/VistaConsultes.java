
package propLlibreria.Interficie;

import java.io.*;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextPane;
import propLlibreria.Domini.Area;
import propLlibreria.Domini.CtrlDominiInterficie;
import propLlibreria.Domini.Estanteria;
import propLlibreria.Domini.Llibre;
import propLlibreria.Domini.Seccio;
import propLlibreria.Domini.Tematica;
/**
 *
 * @author Ruben
 */
public class VistaConsultes extends javax.swing.JPanel {

    /**
     * Creates new form VistaConsultes
     */
    @SuppressWarnings("FieldMayBeFinal")
    private CtrlInterficie controladorInterficie;
    
    
    public VistaConsultes() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Seleccio = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        funcionsSeleccio = new javax.swing.JComboBox();
        OKButton = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setFont(new java.awt.Font("Arial Unicode MS", 0, 11)); // NOI18N

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setFocusable(false);

        jLabel1.setText("Coses de la capcelera");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(196, 196, 196)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 12, Short.MAX_VALUE)
                .addComponent(jLabel1))
        );

        Seleccio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecciona...", "Area", "Seccio", "Tematica", "Llibre", "Estanteria" }));
        Seleccio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SeleccioActionPerformed(evt);
            }
        });

        jScrollPane1.setAutoscrolls(true);

        funcionsSeleccio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tipus consulta..." }));
        funcionsSeleccio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                funcionsSeleccioActionPerformed(evt);
            }
        });

        OKButton.setText("OK");
        OKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKButtonActionPerformed(evt);
            }
        });

        jTextField1.setForeground(new java.awt.Color(153, 153, 153));
        jTextField1.setText("Introdueix dades");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField1FocusLost(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 63, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Seleccio, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(funcionsSeleccio, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(OKButton)
                        .addGap(45, 45, 45))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Seleccio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(funcionsSeleccio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(OKButton))
                .addGap(21, 21, 21)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    
    private void restablirOpcions() {
        funcionsSeleccio.removeAllItems();
        funcionsSeleccio.setModel(new javax.swing.DefaultComboBoxModel(new String[] {"Tipus consulta..."}));
    }
    private void opcionsArea() {
        funcionsSeleccio.removeAllItems();
        funcionsSeleccio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tipus consulta...", "Totes arees", "Seccions d'area", "Tematiques d'area", "Llibres d'area" }));
    }
    private void opcionsSeccio() {
    funcionsSeleccio.removeAllItems();
        funcionsSeleccio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tipus consulta...", "Totes seccions", "Tematiques seccio", "Llibres seccio" }));
    }
    private void opcionsTematica() {
    funcionsSeleccio.removeAllItems();
        funcionsSeleccio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tipus consulta...", "Totes tematiques", "Llibres tematiques" }));
    }
    private void opcionsLlibre() {
    funcionsSeleccio.removeAllItems();
        funcionsSeleccio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tipus consulta..." , "Consulta per t√≠tol", "Consulta per autor", "Consulta per tematica principal", "Consulta per isbn", "Consulta per any", "Consulta per editorial"}));
        
    }
    private void opcionsEstanteria() {
        funcionsSeleccio.removeAllItems();
        funcionsSeleccio.setModel(new javax.swing.DefaultComboBoxModel(new String[] {"Tipus consulta...", "Totes estanteries", "Llibres estanteria", "Localitzacio estanteria", "Mida estanteria",}));
    }
    private void funcionsSeleccioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_funcionsSeleccioActionPerformed
        // TODO add your handling code here:
        String funcionsSeleccioItem = (String) funcionsSeleccio.getModel()
                .getSelectedItem();
        System.out.println(funcionsSeleccioItem);
        try {
            //TODO
        }
        catch (Exception e) {
            System.out.println(e.getMessage());
        }
        
    }//GEN-LAST:event_funcionsSeleccioActionPerformed

    private void SeleccioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SeleccioActionPerformed
        // TODO add your handling code here:
        String SeleccioItem = (String) Seleccio.getModel()
                .getSelectedItem();
        try {
            switch(SeleccioItem) {
                case "Selecciona...":
                    restablirOpcions();
                    break;
                case "Area":
                    opcionsArea();
                    break; 
                case "Seccio":
                    opcionsSeccio();
                    break;
                case "Tematica":
                    opcionsTematica();
                    break;
                case "Llibre":
                    opcionsLlibre();
                    break;
                case "Estanteria":
                    opcionsEstanteria();
                    break;
            }
        }
        catch (Exception e){
            System.out.println(e.getMessage());
        }   
    }//GEN-LAST:event_SeleccioActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed
    
    private void consultaArea(String funcio) {
        try {
            System.out.println("Consulta area");
            switch(funcio) {
                case "Totes arees":
                    ArrayList<Area> arees = CtrlDominiInterficie.seleccionaAllArees();
                    JTextArea txt = new JTextArea();
                    txt.setEditable(false);
                    txt.setLineWrap(true);
                    txt.insert("¬∑ " + arees.get(0).getNomArea(),0);
                    for (int i = 1; i < arees.size(); i++) txt.append("\n¬∑"+arees.get(i).getNomArea());
                    jScrollPane1.setViewportView(txt);
                    break;
                case "Seccions d'area":
                    
                    break;
                case "Tematiques d'area":
                    break;
                case "Llibres d'area":
                    break;       
            }
        }
        catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
    private void consultaSeccio(String funcio) {
      try {
          System.out.println("Consulta seccio");
            switch(funcio) {
                case "Totes seccions" :
                    ArrayList<Area> arees = CtrlDominiInterficie.seleccionaAllArees();
                    JTextArea txt = new JTextArea();
                    txt.setEditable(false);
                    txt.setLineWrap(true);
                    txt.insert("¬∑ " + arees.get(0).getNomArea(),0);
                    for (int i = 1; i < arees.size(); i++) txt.append("\n¬∑"+arees.get(i).getNomArea());
                    jScrollPane1.setViewportView(txt);
                    break;
                case "Tematiques seccio" :
                    break;
                case "Llibres seccio" :
                    break; 
            }
        }
        catch (Exception e) {
            System.out.println(e.getMessage());
        } 
    }
    
    private void consultaTematica(String funcio) {
        try {
            System.out.println("Consulta Tematica");
            switch(funcio) {
                case "Totes tematiques":
                    System.out.println("Consulta Tematica2");
                    ArrayList<Tematica> tematiques = CtrlDominiInterficie.seleccionaAllTematiques();
                    JTextArea txt = new JTextArea();
                    txt.setEditable(false);
                    txt.setLineWrap(true);
                    txt.setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4));
                    txt.insert("¬∑ " + tematiques.get(0).getNomTematica(),0);
                    for (int i = 1; i < tematiques.size(); i++) txt.append("\n¬∑"+tematiques.get(i).getNomTematica());
                    jScrollPane1.setViewportView(txt);
                    break;
                case "Llibres tematiques":
                    
                    break;
            }
        }
        catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
    
    private void consultaLlibre(String funcio) {
      try {
          System.out.println("Consulta llibre");
            switch(funcio) {
                case "Consulta per t√≠tol":
                    
                    break;
                case "Consulta per autor":
                    break;
                case "Consulta per tematica principal":
                    break;
                case "Consulta per isbn":
                    break;
                case "Consulta per any":
                    break;
                case "Consulta per editorial":
                    break;
            }
        }
        catch (Exception e) {
            System.out.println(e.getMessage());
        }  
    }
    
    private void consultaEstanteria(String funcio) {
        try {
            System.out.println("Consulta Estanteria");
            switch(funcio) {
                case "Totes estanteries":
                    ArrayList<Estanteria>  estanteries = CtrlDominiInterficie.seleccionaAllEstanteries();
                    if (estanteries.size() > 0) {
                        JTextArea txt = new JTextArea();
                        txt.setEditable(false);
                        txt.setLineWrap(true);
                        txt.insert("¬∑ " + estanteries.get(0).getID(),0);
                        for (int i = 1; i < estanteries.size(); i++) txt.append("\n¬∑"+estanteries.get(i).getID());
                        jScrollPane1.setViewportView(txt);
                    }
                    break;
                case "Llibres estanteria":
                    break;
                case "Localitzacio estanteria":
                    break;
                case "Mida estanteria":
                    break;
            }
        }
        catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
    
    private void OKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKButtonActionPerformed
        // TODO add your handling code here:
        try {
            System.out.println("Consulta...");
            String SeleccioItem = (String) Seleccio.getModel()
                .getSelectedItem();
            String funcionsSeleccioItem = (String) funcionsSeleccio.getModel()
                .getSelectedItem();
            switch (SeleccioItem) {
                case "Area":
                    consultaArea(funcionsSeleccioItem);
                    break; 
                case "Seccio":
                    consultaSeccio(funcionsSeleccioItem);
                    break;
                case "Tematica":
                    consultaTematica(funcionsSeleccioItem);
                    break;
                case "Llibre":
                    consultaLlibre(funcionsSeleccioItem);
                    break;
                case "Estanteria":
                    consultaEstanteria(funcionsSeleccioItem);
                    break;
                default:
                    
            }
        }
        catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_OKButtonActionPerformed

    private void jTextField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusGained
        // TODO add your handling code here:
        if(jTextField1.getText().trim().equals("Introdueix dades")){
           jTextField1.setText("");
           jTextField1.setForeground(new java.awt.Color(0,0,0));
        }
    }//GEN-LAST:event_jTextField1FocusGained

    private void jTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusLost
        // TODO add your handling code here:
        if(jTextField1.getText().trim().equals("")) {
           jTextField1.setText("Introdueix dades");
           jTextField1.setForeground(new java.awt.Color(153, 153, 153));
        }
    }//GEN-LAST:event_jTextField1FocusLost

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        // TODO add your handling code here:
        OKButton.setEnabled(true);
    }//GEN-LAST:event_jTextField1KeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton OKButton;
    private javax.swing.JComboBox Seleccio;
    private javax.swing.JComboBox funcionsSeleccio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
